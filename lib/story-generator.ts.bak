/**
 * نظام توليد القصص المتقدم - Advanced Story Generator
 * يوفر نظاماً متكاملاً لإنشاء قصص ديناميكية غنية بالتفاصيل
 */

import { v4 as uuidv4 } from 'uuid';

// أنواع القصص المتاحة مع تعريف موسع
enum StoryType {
  INTERNAL_CONFLICT = 0,
  REBELLION = 1,
  EXISTENTIAL = 2,
  DARK_HUMOR = 3,
  PAINFUL_EXPERIENCE = 4,
  SELF_DISCOVERY = 5,
  ALIENATION = 6
}

// بنية مواضيع القصص مع تفاصيل إثرائية
interface StoryTheme {
  id: StoryType;
  title: string;
  description: string;
  keywords: string[];
  mood: 'dark' | 'light' | 'neutral';
  duration: 'short' | 'medium' | 'long';
  narrativeStyle: 'reflective' | 'descriptive' | 'dialogic';
}

// مواضيع القصص مع بيانات غنية
const STORY_THEMES: StoryTheme[] = [
  {
    id: StoryType.INTERNAL_CONFLICT,
    title: "صراع الروح",
    description: "رحلة في أعماق النفس البشرية بين التناقضات الداخلية",
    keywords: ["صراع", "تناقض", "قلق", "تأمل", "وعي"],
    mood: "dark",
    duration: "medium",
    narrativeStyle: "reflective"
  },
  {
    id: StoryType.REBELLION,
    title: "ثورة الوعي",
    description: "تمرد على القيود المفروضة والبحث عن الحرية الحقيقية",
    keywords: ["تمرد", "حرية", "ثورة", "تحدي", "تحرر"],
    mood: "neutral",
    duration: "long",
    narrativeStyle: "descriptive"
  },
  // ... إضافة باقي المواضيع بنفس الهيكل
];

// خيارات متقدمة لتوليد القصص
interface StoryOptions {
  length?: 'short' | 'medium' | 'long';
  complexity?: 'simple' | 'moderate' | 'complex';
  perspective?: 'first' | 'second' | 'third';
  style?: 'poetic' | 'direct' | 'metaphorical';
}

// بنية القصة الكاملة
interface Story {
  id: string;
  originalId: number;
  title: string;
  content: string;
  summary: string;
  theme: StoryTheme;
  metadata: {
    length: string;
    complexity: string;
    perspective: string;
    style: string;
    createdAt: string;
    wordCount: number;
    readingTime: number;
    language: 'ar';
  };
}

// ======== الدوال المساعدة ======== //
type PerspectiveConfig = {
  pronoun: string;
  possessive: string;
  suffix: string;
};

const getPerspective = (type?: string): PerspectiveConfig => {
  switch (type) {
    case 'second': return { pronoun: 'أنت', possessive: 'ك', suffix: '' };
    case 'third': return { pronoun: 'هو', possessive: 'ه', suffix: '' };
    default: return { pronoun: 'أنا', possessive: 'ي', suffix: 'ت' };
  }
};

const getLengthModifier = (length?: string): number => {
  const lengths: Record<string, number> = { short: 1, medium: 2, long: 3 };
  return lengths[length?.toLowerCase() || 'medium'] || 2;
};

const getStyle = (style?: string): string => style || 'direct';

const calculateWordCount = (content: string): number => {
  return content.trim().split(/\s+/g).filter(word => word.length > 0).length;
};

const calculateReadingTime = (content: string): number => {
  return Math.ceil(calculateWordCount(content) / 200);
};

const generateStoryTitle = (theme: StoryTheme): string => {
  return theme.title + ' - ' + new Date().toLocaleDateString('ar-SA');
};

const generateQuote = (theme: StoryTheme): string => {
  const quotes: Record<StoryType, string[]> = {
    [StoryType.INTERNAL_CONFLICT]: ["الحقيقة تكمن في الأعماق", "الصراع بداية الوعي"],
    // إضافة باقي الاقتباسات
  };
  return quotes[theme.id][Math.floor(Math.random() * quotes[theme.id].length)];
};

// ======== الدوال الرئيسية ======== //
function generateStoryContent(seed: number, title: string, options: StoryOptions): string {
  switch (seed) {
    case StoryType.INTERNAL_CONFLICT:
      return generateInternalConflictStory(title, options);
    // إضافة باقي أنواع القصص
    default:
      return generateDefaultStory(title, options);
  }
}

function generateInternalConflictStory(title: string, options: StoryOptions): string {
  const { pronoun, possessive, suffix } = getPerspective(options.perspective);
  const length = getLengthModifier(options.length);
  const style = getStyle(options.style);

  return `
    <article class="story" data-theme="internal-conflict" data-style="${style}">
      <header>
        <h2>${title}</h2>
        <p class="story-opening">${generateOpeningSentence(STORY_THEMES[StoryType.INTERNAL_CONFLICT], options)}</p>
      </header>
      <section class="story-body">
        ${length > 1 ? `
          <p>في أعماق ${possessive}روح، يتردد صدى صراع لا ينتهي...</p>
          <div class="quote">${generateQuote(STORY_THEMES[StoryType.INTERNAL_CONFLICT])}</div>
        ` : ''}
        <div class="story-climax">
          <p>${generateClimax(STORY_THEMES[StoryType.INTERNAL_CONFLICT], options)}</p>
        </div>
      </section>
    </article>
  `;
}

const generateOpeningSentence = (theme: StoryTheme, options: StoryOptions): string => {
  const openings: Record<StoryType, string[]> = {
    [StoryType.INTERNAL_CONFLICT]: [
      "بدأ كل شيء بصوت خافت في الأعماق...",
      "لم أكن أعلم أن هذه الرحلة ستغير كل شيء..."
    ],
    // إضافة فتحات لباقي الأنواع
  };
  return openings[theme.id][Math.floor(Math.random() * openings[theme.id].length)];
};

// ======== الدوال الأساسية ======== //
export function generateStory(id: number, title: string, options: StoryOptions = {}): Story {
  const seed = id % STORY_THEMES.length;
  const theme = STORY_THEMES[seed];
  const content = generateStoryContent(seed, title, options);

  return {
    id: `story_${uuidv4().substring(0, 8)}`,
    originalId: id,
    title: title || generateStoryTitle(theme),
    content,
    summary: generateStorySummary(content, theme),
    theme,
    metadata: {
      length: options.length || theme.duration,
      complexity: options.complexity || 'moderate',
      perspective: options.perspective || 'first',
      style: options.style || 'direct',
      createdAt: new Date().toISOString(),
      wordCount: calculateWordCount(content),
      readingTime: calculateReadingTime(content),
      language: 'ar'
    }
  };
}

// إضافة الدوال المتبقية بنفس النمط
